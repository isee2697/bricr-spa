type ListPimPropertyRelated {
  items: [PropertyRelatedItems]
}

type ListPimHouseOutside {
  propertyRelated: ListPimPropertyRelated
}

type ListPim {
  id: String!
  houseNumberPrefix: String
  houseNumber: String!
  houseNumberAddition: String
  constructionNumberPrefix: String
  constructionNumber: String
  constructionNumberAddition: String
  postalCode: String!
  district: String
  street: String
  city: String!
  state: String
  county: String
  country: String!
  completeness: Float!
  propertyType: PropertyType
  salePrice: Float
  rentPrice: Float
  pictures: [Picture!]
  livingArea: Int
  attentionNote: String
  dateCreated: Date!
  dateUpdated: Date
  lastEditedBy: LastUpdatedProfile
  houseOutside: ListPimHouseOutside
  archived: Boolean
  status: PimStatus!
  developmentType: DevelopmentType!
  linkedObjectTypeIds: [String]
  mainPicture: Picture
  isPurchased: Boolean
}

type PimListSearchResult {
  metadata: SearchMetadata
  items: [ListPim!]
}

extend type Query {
  listPims(filters: ListPimsFilters, pagination: Pagination, sort: [Sort!]): PimListSearchResult! @auth
}
