type ProjectPhase {
  id: ID!
  name: String!
  logo: File
  ncpIds: [ID!]
}

input CreateProjectPhaseInput {
  name: String!
  logoId: ID
  ncpId: ID
}

input UpdateProjectPhaseInput {
  id: ID!
  name: String!
  logoId: ID
  ncpIds: [ID!]
}

input ProjectPhaseFilters {
  name: String
  ncpId: ID
}

type ProjectPhaseSearchResult {
  metadata: SearchMetadata
  items: [ProjectPhase!]
}

input LinkNcpToProjectPhaseInput {
  ncpId: ID!
  projectPhaseId: ID!
}

extend type Mutation {
  addProjectPhase(input: CreateProjectPhaseInput!): ProjectPhase! @auth
  updateProjectPhase(input: UpdateProjectPhaseInput!): ProjectPhase! @auth
  removeProjectPhase(id: ID!): Boolean @auth
  linkNcpToProjectPhase(input: LinkNcpToProjectPhaseInput!): ProjectPhase! @auth
}

extend type Query {
  getProjectPhases(filters: ProjectPhaseFilters, pagination: Pagination!): ProjectPhaseSearchResult! @auth
}
