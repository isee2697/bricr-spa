input ListNcpsFilters {
  archived: Boolean
  pricingType: PricingType
}

type ListNcp {
  id: ID!
  dateCreated: Date!
  dateUpdated: Date
  archived: Boolean!
  areaRangeFrom: AbsoluteFloat
  areaRangeTo: AbsoluteFloat
  numberOfRoomsFrom: Int
  numberOfRoomsTo: Int
  logoPicture: File
  mainPicture: File
  name: String
  salePriceFrom: AbsoluteFloat
  salePriceTo: AbsoluteFloat
  rentPriceFrom: AbsoluteFloat
  rentPriceTo: AbsoluteFloat
  saleLabel: String
  rentLabel: String
  partOfPhase: Int
  soldNumber: Int
  rentNumber: Int
  completeness: Float!
  available: Int
  underOption: Int
  soldOrRent: Int
  matches: Int
  interests: Int
  candidates: Int
  optants: Int
  properties: Int
  color: String
  attentionNote: String
  objectTypesCount: Int
}

input UpdateObjectTypesListDescription {
  id: String!
  description: String
}

type NcpListSearchResult {
  metadata: SearchMetadata
  items: [ListNcp!]
}

extend type Query {
  listNcps(filters: ListNcpsFilters, pagination: Pagination, sort: [Sort!]): NcpListSearchResult! @auth
}

extend type Mutation {
  updateObjectTypesListDescription(input: UpdateObjectTypesListDescription!): NcpGeneral @auth 
}
