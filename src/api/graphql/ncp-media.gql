type NcpMedia implements LastUpdated {
  id: String!
  pictures(sort: Sort): [Picture!]
  mainPictureId: String
  mediaLinks: [MediaLink!]
  textChapters: [TextChapter!]
  usps: [Usp!]
  tags: [Tag!]
  dateUpdated: Date
  lastEditedBy: LastUpdatedProfile
  mediaDescription: String
}

extend type Query {
  getNcpMedia(id: ID!): NcpMedia! @auth
}

extend type Mutation {
  addNcpPictures(input: CommonAddPicturesInput!): NcpMedia @auth
  updateNcpPicture(input: CommonUpdatePictureInput!): NcpMedia @auth
  addNcpTextChapter(input: CommonAddTextChapterInput!): NcpMedia @auth
  updateNcpTextChapter(input: CommonUpdateTextChapterInput!): NcpMedia @auth
  addNcpUsps(input: CommonAddUspsInput!): NcpMedia @auth
  updateNcpUsps(input: CommonUpdateUspsInput!): NcpMedia @auth
  addNcpMediaLink(input: CommonAddMediaLinkInput!): NcpMedia @auth
  updateNcpMediaLink(input: CommonUpdateMediaLinkInput!): NcpMedia @auth
  addNcpTag(input: CommonAddTagInput!): NcpMedia @auth
  updateNcpTag(input: CommonUpdateTagInput!): NcpMedia @auth
  updateNcpMediaDescription(input: CommonUpdateMediaDescriptionInput!): NcpMedia @auth
}