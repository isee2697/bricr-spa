
enum ContactAddressType {
  HomeAddress,
  SalesAddress,
  MailingAddress,
  VisitingAddress,
  BillingAddress,
  FutureAddress,
  PreviousAddress,
  SecondAddress,
  Custom
}

enum ContactPhoneNumberType {
  MainNumber,
  MobileNumber,
  PrivateNumber,
  BusinessNumber,
  FaxNumber,
  Custom
}

enum ContactEmailAddressType {
  MainAddress,
  AddressForMatches,
  AddressForInvoices,
  Private,
  Business,
  PreviousAddress
  Custom
}

enum ContactSocialMediaType {
  Facebook,
  Twitter,
  LinkedIn,
  Custom
}

type CrmContactInformation implements LastUpdated {
  id: ID!
  contactInfoDescription: String
  addresses: [CrmAddress!]
  phoneNumbers: [CrmPhoneNumber!]
  emailAddresses: [CrmEmailAddress!]
  socialMedia: [CrmSocialMedia!]
  dateCreated: Date!
  lastEditedBy: LastUpdatedProfile
  dateUpdated: Date
}

input UpdateCrmContactInformationInput {
  id: ID!
  contactInfoDescription: String
  addresses: [CrmAddressInput!]
  phoneNumbers: [CrmPhoneNumberInput!]
  emailAddresses: [CrmEmailAddressInput!]
  socialMedia: [CrmSocialMediaInput!]
}

type CrmAddress {
  id: ID!
  type: ContactAddressType!
  street: String
  houseNumber: Int
  addition: String
  zipcode: String
  city: String
  country: String
  extraInformation: String
  availableFrom: Date
  note: String
}

type CrmPhoneNumber {
  id: ID!
  type: ContactPhoneNumberType!
  countryCode: String
  phoneNumber: String
  availableFrom: Date
  note: String
}

type CrmEmailAddress {
  id: ID!
  type: ContactEmailAddressType!
  email: String
  availableFrom: Date
  note: String
}

type CrmSocialMedia {
  id: ID!
  type: ContactSocialMediaType!
  url: String
}

input CrmAddressInput {
  type: ContactAddressType!
  street: String
  houseNumber: Int
  addition: String
  zipcode: String
  city: String
  country: String
  extraInformation: String
  availableFrom: Date
  note: String
}

input CrmPhoneNumberInput {
  type: ContactPhoneNumberType!
  countryCode: String
  phoneNumber: String
  availableFrom: Date
  note: String
}

input CrmEmailAddressInput {
  type: ContactEmailAddressType!
  email: String
  availableFrom: Date
  note: String
}

input CrmSocialMediaInput {
  type: ContactSocialMediaType!
  url: String
}

extend type Mutation {
  updateCrmContactInformation(input: UpdateCrmContactInformationInput!): CrmContactInformation @auth
}

extend type Query {
  getCrmContactInformation(id: ID!): CrmContactInformation @auth
}