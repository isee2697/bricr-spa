type NylasAccount {
    id: ID!
    userId: ID!
    accountId: ID!
    accessToken: String!
    newAccount: Boolean!
    isCalendarConnected: Boolean
    isEmailConnected: Boolean
}

enum NylasProviderType {
    Exchange,
    Gmail,
    Outlook
}

input NylasAuthorizationInput {
    name: String!
    email: String!
    provider: NylasProviderType!
    username: String!
    password: String!
}

type NylasAccountItem {
    id: ID!
    email: String!
    provider: String!
    billingState: String!
    syncState: String!
    isCalendarConnected: Boolean
    isEmailConnected: Boolean
}

input NylasAccountAuthOptions {
    loginHint: String!
    redirectURI: String
    scopes: [String!]
}

extend type Mutation {
    authorizeNylasAccount(input: NylasAuthorizationInput!, isCalendarConnected: Boolean, isEmailConnected: Boolean): Boolean @auth
    authorizeNylasAccountWithToken(nylasToken: String!, isCalendarConnected: Boolean, isEmailConnected: Boolean): NylasAccount @auth
}

extend type Query {
    listNylasAccount(isCalendarConnected: Boolean, isEmailConnected: Boolean): [NylasAccountItem!] @auth
    getNylasAuthUrl(input: NylasAccountAuthOptions!): String @auth
}
