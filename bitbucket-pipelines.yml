pipelines:

  custom:

    develop:
      - step:
          image: tshio/node-pipelines:node-12
          name: Build image
          services:
            - docker
          size: 2x
          script:
            - docker build --build-arg PHRASE_ENABLED=$PHRASE_ENABLED --build-arg PHRASE_ACCESS_TOKEN=$PHRASE_ACCESS_TOKEN --build-arg PHRASE_PROJECT_ID=$PHRASE_PROJECT_ID -t 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-dev -f devops/docker/Dockerfile.dev .
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export AWS_REGION=eu-west-1
            #Dependencies
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            #Push commands
            - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 158856956003.dkr.ecr.eu-west-1.amazonaws.com
            - docker push 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-dev

      - step:
          image: wojtaszczykkamil/terraform:0.12.24
          name: Deploy
          script:
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export PACKAGE=bricr-spa-dev
            - export URL=https://develop.dev-domain.nl
            #Deploy
            - export TF_VAR_docker_tag=$BITBUCKET_COMMIT-dev
            - chmod +x ./devops/scripts/deploy-and-notify.sh
            - ./devops/scripts/deploy-and-notify.sh

  branches:
    release/*:
      - step:
          image: tshio/node-pipelines:node-12
          name: Build image
          services:
            - docker
          size: 2x
          script:
            - docker build --build-arg PHRASE_ACCESS_TOKEN=$PHRASE_ACCESS_TOKEN --build-arg PHRASE_PROJECT_ID=$PHRASE_PROJECT_ID -t 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-stg -f devops/docker/Dockerfile .
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export AWS_REGION=eu-west-1
            #Dependencies
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            #Push commands
            - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 158856956003.dkr.ecr.eu-west-1.amazonaws.com
            - docker push 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-stg
      - step:
          image: wojtaszczykkamil/terraform:0.12.24
          name: Deploy
          script:
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export PACKAGE=bricr-spa
            - export URL=https://staging.dev-domain.nl
            #Deploy
            - export TF_VAR_docker_tag=$BITBUCKET_COMMIT-stg
            - chmod +x ./devops/scripts/deploy-and-notify.sh
            - ./devops/scripts/deploy-and-notify.sh

    develop:
      - step:
          image: tshio/node-pipelines:node-12
          name: Build image
          services:
            - docker
          size: 2x
          script:
            - docker build --build-arg PHRASE_ENABLED=$PHRASE_ENABLED --build-arg PHRASE_ACCESS_TOKEN=$PHRASE_ACCESS_TOKEN --build-arg PHRASE_PROJECT_ID=$PHRASE_PROJECT_ID -t 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-dev -f devops/docker/Dockerfile.dev .
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export AWS_REGION=eu-west-1
            #Dependencies
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            #Push commands
            - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 158856956003.dkr.ecr.eu-west-1.amazonaws.com
            - docker push 158856956003.dkr.ecr.eu-west-1.amazonaws.com/bricr-spa:$BITBUCKET_COMMIT-dev

      - step:
          image: wojtaszczykkamil/terraform:0.12.24
          name: Deploy
          script:
            #Variables
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export PACKAGE=bricr-spa-dev
            - export URL=https://develop.dev-domain.nl
            #Deploy
            - export TF_VAR_docker_tag=$BITBUCKET_COMMIT-dev
            - chmod +x ./devops/scripts/deploy-and-notify.sh
            - ./devops/scripts/deploy-and-notify.sh



  pull-requests:
    '**':
      - step:
          image: node:12.14.1
          caches:
            - node
          name: Run linter and tests
          script:
            - cp .env.dist .env
            - npm install
            - node ./scripts/get_translations.js --accessToken=$PHRASE_ACCESS_TOKEN --projectID=$PHRASE_PROJECT_ID
            - npm run lint
            - npm run coverage
            - npm run build
          size: 2x
      - step:
          name: build and install
          image: cypress/browsers:node13.6.0-chrome80-ff72
          caches:
            - node
            - cypress
            - cypress-node
          script:
            - cp .env.dist .env
            - npm install
            - npm install --save-dev cypress@4.0.2
            - node ./scripts/get_translations.js --accessToken=$PHRASE_ACCESS_TOKEN --projectID=$PHRASE_PROJECT_ID
            - npm run build:ci
            - cd e2e && npm install && cd ..
          artifacts:
            - build/**
            - e2e/node_modules/**
      - parallel:
          - step:
              name: e2e - firefox
              image: cypress/browsers:node13.6.0-chrome80-ff72
              caches:
                - node
              script:
                - npm install --save-dev cypress@4.0.2
                - cp .env.e2e.dist ./e2e/.env
                - npm run e2e:ci:firefox
          - step:
              name: e2e - chrome
              image: cypress/browsers:node13.6.0-chrome80-ff72
              caches:
                - node
              script:
                - npm install --save-dev cypress@4.0.2
                - cp .env.e2e.dist ./e2e/.env
                - npm run e2e:ci:chrome

definitions:
  caches:
    cypress: $HOME/.cache/Cypress
    cypress-node: ./e2e/node_modules
  services:
    docker:
      memory: 5000